// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Showcase.Persistence;

namespace Showcase.Persistence.Migrations
{
    [DbContext(typeof(ShowcaseDbContext))]
    [Migration("20200722152527_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Showcase.Domain.Entities.Developer", b =>
                {
                    b.Property<string>("DeveloperId")
                        .HasColumnName("developer_id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("DeveloperId");

                    b.ToTable("developers");
                });

            modelBuilder.Entity("Showcase.Domain.Entities.DisplayProject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("text");

                    b.Property<int[]>("Languages")
                        .HasColumnName("languages")
                        .HasColumnType("integer[]");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("SourceCodeUrl")
                        .HasColumnName("source_code_url")
                        .HasColumnType("text");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnName("thumbnail_url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("display_projects");
                });

            modelBuilder.Entity("Showcase.Domain.Entities.ProgrammingLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DeveloperId")
                        .HasColumnName("developer_id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.ToTable("programming_languages");
                });

            modelBuilder.Entity("Showcase.Domain.Entities.Watcher", b =>
                {
                    b.Property<string>("WatcherId")
                        .HasColumnName("watcher_id")
                        .HasColumnType("text");

                    b.Property<bool>("Cancelled")
                        .HasColumnName("cancelled")
                        .HasColumnType("boolean");

                    b.Property<string>("DeveloperId")
                        .HasColumnName("developer_id")
                        .HasColumnType("text");

                    b.HasKey("WatcherId");

                    b.HasIndex("DeveloperId");

                    b.ToTable("watchers");
                });

            modelBuilder.Entity("Showcase.Domain.Entities.ProgrammingLanguage", b =>
                {
                    b.HasOne("Showcase.Domain.Entities.Developer", null)
                        .WithMany("Languages")
                        .HasForeignKey("DeveloperId");
                });

            modelBuilder.Entity("Showcase.Domain.Entities.Watcher", b =>
                {
                    b.HasOne("Showcase.Domain.Entities.Developer", null)
                        .WithMany("Watchers")
                        .HasForeignKey("DeveloperId");
                });
#pragma warning restore 612, 618
        }
    }
}
